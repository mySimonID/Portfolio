{"version":3,"sources":["components/SkillsCard.js","components/ExperienceCard.js","components/EducationCard.js","components/TagItem.js","components/Tags.js","components/ArticleReader.js","components/CurrentProjectsPage.js","data/Content.js","App.js","components/Heading.js","components/ArticlePage.js","components/ArticleCard2.js","components/SkillPage.js","serviceWorker.js","index.js"],"names":["SkillsCard","props","skill","className","to","id","icon","title","items","map","item","index","key","ExperienceCard","exp","role","dates","text","EducationCard","tagItem","tag","tags","tagList","split","TagItem","ArticleReader","componentDidMount","readTextFile","filename","componentDidUpdate","prevProps","console","log","file","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","allText","responseText","setState","send","getPrefix","row","pos","indexOf","prefix","slice","getText","getLinkName","getLink","length","renderText","toUpperCase","trim","src","process","alt","src2","images","result","image","src3","result3","name","link","rel","target","href","Tags","state","this","React","Component","CurrentProjectsPage","article","skills","articles","skillid","detail","experience","education","App","style","backgroundImage","Heading","ArticlePage","record","find","getArticle","match","params","fileName","ArticleCard","pathname","SkillsPage","componentWillMount","articleList","filter","getArticlesForSkill","Boolean","window","location","hostname","ReactDOM","render","StrictMode","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7008b7ac.chunk.js","sourcesContent":["import React from 'react'\n\nimport {Link} from 'react-router-dom';\n\nfunction SkillsCard(props) {\n\n  const { skill } = props;\n\n  return (\n    <div className=\"col-6\">\n      <Link to={`/skill/${skill.id}`} >\n        <div className=\"skills-card\">\n          <i className=\"material-icons feature-box-icon\">{skill.icon}</i>\n          <h3 className=\"skills-card-heading u-margin-bottom-small\">{skill.title}</h3>\n\n          <ul >\n            {skill.items.map((item, index) => <li key={index}>{item}</li>)}\n          </ul>\n          <p></p>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default SkillsCard;\n","import React from 'react'\n\nfunction ExperienceCard(props) {\n\n  var { exp } = props;\n\n  return (\n    <div className=\"experience\">\n      <div className=\"experience-title\">\n        <h3>{exp.title} - </h3>\n         \n          <p>{exp.role} - </p>\n          <p>({exp.dates})</p>\n\n      </div>\n      <div className=\"experience-detail\">\n        <p>{exp.text}</p>\n      </div>\n    </div>\n  )\n\n}\n\nexport default ExperienceCard\n","import React from 'react'\n\nfunction EducationCard(props) {\n\n  var { exp } = props;\n\n  return (\n    <div className=\"experience\">\n      <div className=\"experience-title\">\n        <p>{exp.title}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default EducationCard\n","import React from 'react'\n\nfunction tagItem(props) {\n\n  const { tag } = props;\n\n  return (\n    <div className=\"tag\">\n      {tag}\n    </div>\n  )\n\n}\n\nexport default tagItem;\n","import React from 'react'\nimport TagItem from './TagItem'\n\nfunction tags(props) {\n\n  const { tagList } = props;\n\n  return (\n    <div className=\"row tagRow\">\n      {tagList.split(',').map((tag, index) => {\n        return(\n          <TagItem tag={tag} key={index} />\n        )\n      })}\n    </div>\n  )\n\n}\n\nexport default tags;\n","import React from 'react'\nimport Tags from './Tags'\nimport {Link} from 'react-router-dom'\n\nimport '../ArticleReader.css'\n\nclass ArticleReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n\n    console.log(\"ArticleReader-constructor:\" + this.props.filename);\n  }\n\n  // componentDidMount = () => {\n  //   // this.readTextFile(this.props.txt);\n  // }\n\n  componentDidMount = () => {\n    this.readTextFile(this.props.filename);\n  }\n\n  componentDidUpdate = (prevProps) => {\n    console.log(\"componentDidUpdate: \" + this.props.filename);\n\n    if (this.props.filename !== prevProps.filename) {\n      this.readTextFile(this.props.filename);\n    }\n  }\n\n  readTextFile = file => {\n    console.log(\"readTextFile: \" + file)\n    var rawFile = new XMLHttpRequest();\n    rawFile.open(\"GET\", file, false);\n    rawFile.onreadystatechange = () => {\n      if (rawFile.readyState === 4) {\n        if (rawFile.status === 200 || rawFile.status === 0) {\n          var allText = rawFile.responseText;\n          console.log(\"readTextFile(2)-Found)\");\n          this.setState({\n            text: allText\n          });\n        }\n      }\n    };\n    console.log(\"readTextFile(3)-NOTFound)\");\n    rawFile.send(null);\n  };\n\n  getPrefix = (row) => {\n\n    const pos = row.indexOf(\":\");\n    var prefix = \"NF\";\n\n    if (pos > 0) {\n      prefix = row.slice(0, pos);\n    }\n\n    // console.log(prefix);\n    return prefix;\n  }\n\n  getText = (row) => {\n    const pos = row.indexOf(\":\");\n    var text = row;\n    if (pos > 0) {\n      text = row.slice(pos + 1);\n    }\n    return text;\n  }\n\n  getLinkName = (row) => {\n    const pos = row.indexOf(\"]\");\n    var text = row;\n    if (pos > 0) {\n      text = row.slice(1, pos);\n    }\n    return text;\n  }\n\n  getLink = (row) => {\n    const pos = row.indexOf(\"]\");\n    var text = row;\n    if (pos > 0) {\n      text = row.slice(pos + 2); // take into account the (\n      text = text.slice(0, text.length - 1);\n    }\n    return text;\n  }\n\n  renderText = (key, prefix, text) => {\n    console.log(\"renderText:\" + prefix);\n\n    switch (prefix.toUpperCase()) {\n      case 'A':\n        return(<div><Link className=\"article-link underline\" to={`article/${text}`}>Link to main article</Link></div>);\n      case 'B': // Blank Row\n        return (<div>{'\\u00A0'}</div>)\n      case 'NF':\n        return (<div key={key}>{text}</div>)\n      case 'H1':\n        return (<h1 key={key}>{text}</h1>)\n      case 'H2':\n        return (<h2 key={key}>{text}</h2>)\n      case 'H2U':\n        return (<h2 className=\"underline\" key={key}>{text}</h2>)\n      case 'H3':\n        return (<h3 key={key}>{text}</h3>)\n      case 'H3U':\n        return (<h3 className=\"underline\" key={key}>{text}</h3>)\n      case 'HL':\n        return (<div className=\"horizontal-line\"></div>)\n      case 'P':\n        return (<p key={key}>{text}</p>)\n      case 'C':\n        return (<span className=\"code\" key={key}>{text}</span>)\n      case 'I':\n      case 'I1':\n\n        const filename = text.trim();\n        const src = `${process.env.PUBLIC_URL}/img/${filename}`;\n        return (<div className=\"row center\"><img className=\"image001 shadow\" src={src} alt=\"\" /></div>)\n      case 'I2':\n\n        var src2 = \"\";\n\n        const images = text.split(\",\");\n\n        const result = images.map(image => {\n          const filename = image.trim();\n          src2 = `${process.env.PUBLIC_URL}/img/${filename}`;\n          return (<img className=\"image002 shadow\" src={src2} alt=\"\" />)\n        })\n        console.log(images);\n        return (<div className=\"row center\">{result}</div>)\n\n      case 'I3':\n\n        var src3 = \"\";\n\n        const images3 = text.split(\",\");\n\n        const result3 = images3.map(image => {\n          const filename = image.trim();\n          src3 = `${process.env.PUBLIC_URL}/img/${filename}`;\n          return (<img className=\"image003 shadow\" src={src3} alt=\"\" />)\n        })\n        return (<div className=\"row center\">{result3}</div>)\n\n      case 'L':\n        const name = this.getLinkName(text);\n        const link = this.getLink(text);\n        return (<a className=\"normal-a\" rel=\"noopener noreferrer\" target='_blank' href={link}>{name}</a>)\n      case 'T':\n        return (<Tags tagList={text} />);\n      case '*':\n        return <span className='bullet'>{text}<br /></span>\n      default:\n        return <span key={key}>{text}<br /></span>\n    }\n  }\n\n  render() {\n    //console.log(\"ArticleReader - render\" + this.state.filename);\n\n\n\n\n    var prefix = \"\";\n    var text = \"\";\n\n    return (\n      <div>\n        {this.state.text.split(\"\\n\").map((item, key) => {\n\n          prefix = this.getPrefix(item);\n          text = this.getText(item);\n\n          return (\n            <div key={key}>{this.renderText(key, prefix, text)}</div>\n          )\n        })}\n      </div>\n    )\n  }\n\n}\n\nexport default ArticleReader;\n\n\n","import React, { Component } from 'react'\n\nimport ArticleReader from './ArticleReader'\n\nclass CurrentProjectsPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      article: []\n    }\n  }\n\n  componentDidMount = () => {\n\n  }\n\n  render() {\n\n    return (\n      <div>\n\n      \n          <ArticleReader filename={this.props.filename} />\n    \n\n      </div>\n    )\n  }\n}\n\nexport default CurrentProjectsPage;\n","\nexport const skills = [\n  { id: '001', title: 'Front end', icon: 'code', file: '', items: ['HTML', 'CSS', 'Javascript', 'React|Redux'] },\n  { id: '002', title: 'Server', icon: 'share', file: '', items: ['NodeJS', 'Express', '\\u00A0', '\\u00A0'] },\n  { id: '003', title: 'Database', icon: 'cloud_queue', file: '', items: ['mySQL', 'MongoDB', 'Firestore', '\\u00A0'] },\n  { id: '004', title: 'Mobile', icon: 'apps', file: '', items: ['Xamarin forms', 'React Native', '\\u00A0', '\\u00A0'] },\n];\n\nexport const articles = [\n  { id: '001', skillid:'002', title: 'ToDo List Server', detail: 'A RESTful API ToDo list server using Node.js/ Express', file: 'article001.txt'},\n  { id: '002', skillid:'001', title: 'React: Calculator', detail: 'Calculator developed using React', file:'article002.txt'},\n  // eslint-disable-next-line no-script-url\n  { id: '003', skillid:'999', title: 'Javascript: ToDo List', detail: 'ToDo List using Javascript', file:'JavaScript001.txt' },\n  { id: '004', skillid:'002', title: 'NodeJS: ToDo List', detail: 'Provides a ToDo List using a ToDoList API Server', file:'NodeJS001.txt' },\n  { id: '005', skillid:'001', title: 'CSS: Examples', detail: 'Examples of CSS', file:'CSS001.txt' },\n  { id: '006', skillid:'004', title: 'Xamarin: ToDoList client', detail: 'Example of a ToDo list developed using Xamarin.', file:'xamarin001.txt'},\n  { id: '007', skillid:'004', title: 'React Native: ToDoList client', detail: 'Example of a ToDo list developed using React Native', file:'ReactNative001.txt'},\n  { id: '008', skillid:'004', title: 'Xamarin: tymr247', detail: 'A productivity App (Android) developed using Xamarin', file:'xamarin002.txt'},\n  { id: '009', skillid:'001', title: 'React/Redux: Sender-Receiver', detail: 'Example of using React / Redux', file:'ReactRedux001.txt'},\n  { id: '101', skillid:'001', title: 'IssueJ', detail: 'An issue manager similar to JIRA', file:'IssueJ002.txt'},\n\n];\n\n\nexport const experience = [\n  { id: '001', title: 'MSXi - Jaguar Landrover', role:'Project Manager', dates: '2017 - 2020', text: 'Project manager for the replacement of the Global Retailer Portal (GRP). Working with 3rd party suppliers and internal departments, using Agile, to deliver a cloud based global system based on Liferay. In addition, I managed a number of upgrades/fixes on the existing systems. ' },\n  { id: '002', title: 'TFL', dates: '2016 - 2020', role:'Trainer',text: 'Delivered training and support for station staff in the use of new mobile Applications.' },\n  { id: '003', title: 'Hobbs', dates: '2014 - 2016', role:'Technical Project Manager',text: 'Managed the deliver of a number of initiatives to replace the existing Hobbs eCommerce platform, increasing revenue in the first year. Also, project managed the delivery of a complex CRM lifecycle programme improving both engagement and revenue across all CRM activity. Improved internal processes to ensure correct delivery.' },\n  { id: '004', title: 'Data Lateral', dates: '2013 - 2014',  role:'Project Manager', text: 'Delivered Single Customer View(SCV) systems for both Dominoes Pizza and Hobbs.' },\n  { id: '005', title: 'dunnhumby UK', dates: '2008-2012',  role:'Project Manager', text: 'Managed a range of projects including process change (Increasing Tesco statements from four per year to six) and development (Project Workbench, a performance reporting tool), infrastructure (Embedding teams in South America). ' },\n  { id: '006', title: 'Transport for London (TfL)', dates: '1994-2008',  role:'Project Manager/Manager/Developer', \n                     text: \"Owner of several products and managed a team of Developers, Business Analysts and Testers to delivery a number of company wide projects.\" },\n];\n\nexport const education = [\n  { id: '001', title: 'Agile Project Management - Foundation and Practitioner', role:'', dates: '' },\n  { id: '002', title: 'Managing Successful Programmes (MSP) - Foundation and Practitioner', dates: '' },\n  { id: '003', title: 'Prince 2 - Foundation and Practitioner', dates: ''},\n  { id: '004', title: 'MSc Information Management & Finance @Westminster University', dates: '' },\n];\n\n\nexport const getArticle = (id) => {\n\n  const record = articles.find(article => article.id === id);\n  console.log(\"getArticle: \" + record.file);\n  return record\n}\n\nexport const getArticlesForSkill = (id) => {\n\n  //\n  // Return all of the articles associated with the skillid(id)\n  //\n  const articleList = articles.filter(article => article.skillid === id);\n  console.log(articleList);\n  return articleList\n\n}\n\nexport const getSkill = (id) => {\n\n  const record = skills.find(skill => skill.id === id);\n  return record\n}\n\nexport const getExperience = (id) => {\n\n  const data = experience.find(item => item.id === id);\n  return data\n}\n\n","import React from 'react';\n\n\nimport SkillsCard from './components/SkillsCard'\nimport ExperienceCard from './components/ExperienceCard'\nimport EducationCard from './components/EducationCard'\nimport CurrentProjectsPage from './components/CurrentProjectsPage'\n\nimport { skills, experience, education } from './data/Content'\n\nimport './App.css';\nimport './Article.css'\nimport './Skills.css'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      {/* ABOUT ME */}\n      <div className=\"aboutme shadow\">\n        <h1>About Me</h1>\n        <p>I am an experienced Business and Technical Project Manager with over 20 years of experience in a number of industries delivering a range of\n        different infrastructure, process and software projects using both Waterfall and Agile methods.\n        </p>\n        <p>Using a flexible approach to my work, I have on occasion filled the roles of Business Analyst, Tester and Developer.</p>\n        <p>KPI's:</p>\n        <ul>\n          <li>Successful delivery of projects involved on time and budget.</li>\n          <li>Managed requirements to ensure correct project delivery.</li>\n          <li>Performed system analysis to aid with understanding and system testing.</li>\n          <li>Lead, mentored, monitored and managed multi-disciplined teams through different phases of projects.</li>\n          <li>Suggested the best course of action to management on project delivery.</li>\n          <li>Innovated a number of solutions, including RPA.</li>\n        </ul>\n\n        <p>Originally from a developer background, I maintain a firm interest in software development and I continue to develop a number software projects (see below).</p>\n        <p><b>Industries:</b> Transport, Engineering, Data Insight, Agency, Retail and Automotive.</p>\n      </div>\n\n\n      {/* EDUCATION */}\n      <div className=\"aboutme shadow\">\n        <h1>Education</h1>\n        {\n          education.map(exp => <EducationCard key={exp.id} exp={exp} />)\n        }\n      </div>\n\n      {/* EXPERIENCE */}\n      <div className=\"aboutme shadow\">\n        <h1>Work Experience</h1>\n        {\n          experience.map(exp => <ExperienceCard key={exp.id} exp={exp} />)\n        }\n      </div>\n\n      {/* CURRENT PROJECTS */}\n      <section>\n        <div className=\"aboutme shadow\">\n          <h1>Active Projects</h1>\n          <CurrentProjectsPage filename={`${process.env.PUBLIC_URL}/content/issueJ001.txt`} />\n          \n        </div>\n      </section>\n\n      {/* PROJECT PORTFOLIO */}\n      <section>\n        <div className=\"feature-row shadow\"\n          style={{\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/background01.jpg)`,\n          }}\n        >\n\n          <div className=\"feature-container\">\n            <div className=\"feature-title\">\n\n              <h2>Example Projects</h2>\n            </div>\n\n            <div className=\"row\">\n              {skills.map(skill => {\n                return (\n                  <SkillsCard key={skill.id} skill={skill} />\n                )\n              })\n              }\n            </div>\n\n          </div>\n        </div>\n      </section>\n\n\n\n\n      <footer>\n        <div className=\"footerLink\">\n          <p>Contact: <a href=\"mailto:mySimonID@gmail.com\">mySimonID@gmail.com</a></p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\n\n\nconst Heading = () => {\n\n\n  return (\n\n    <div className=\"jumbotron jumbotron-fluid\"\n    style={{ backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${process.env.PUBLIC_URL}/img/HorseGuards.jpg)`\n    // backgroundSize:`cover`, \n    // backgroundPosition:`0 50%`\n    }}\n    >\n      <div className=\"container\">\n        <h1 className=\"display-4\"><a className=\"links\" href={process.env.PUBLIC_URL + '/'}>Simon Joyce</a></h1>\n        <h2 className=\"lead\">project manager / software engineer - portfolio</h2>\n      </div>\n    </div>\n\n  )\n}\n\n\nexport default Heading\n","import React, { Component } from 'react'\n\nimport { getArticle } from '../data/Content'\n\nimport ArticleReader from './ArticleReader'\n\nclass ArticlePage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id,\n      article: []\n    }\n  }\n\n  componentDidMount = () => {\n\n    const article = getArticle(this.state.id);\n\n    this.setState({\n      article: article\n    })\n  }\n\n  render() {\n\n    console.log(\">>>\" + this.state.article.file );\n    var fileName = this.state.article.file ? this.state.article.file : \"unknown.txt\"\n\n    fileName = `${process.env.PUBLIC_URL}/content/${fileName}`;\n    console.log(fileName);\n\n    return (\n      <div className=\"col-12 col-sm-12 col-lg-12\">\n\n        <div className=\"article-page\">\n\n          <h1>{this.state.article.title}</h1>\n          <p>{this.state.article.detail}</p>\n          <ArticleReader filename={fileName} />\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default ArticlePage;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction ArticleCard(props) {\n\n  const { article } = props;\n\n  return (\n    <div className=\"col-6 col-sm-6 col-lg-6\">\n      <div className=\"article-card shadow\">\n        <Link  to={{ pathname: '/article/' + article.id, article: article }}>\n          \n          <div className=\"article-card-body\">\n            <h3>{article.title}</h3>\n            <p className=\"card-text\">{article.detail}</p>\n\n          </div>\n        </Link>\n      </div>\n\n    </div>\n  )\n}\n\nexport default ArticleCard;\n","import React, { Component } from 'react'\n\nimport { getSkill, getArticlesForSkill } from '../data/Content'\nimport ArticleCard from './ArticleCard2'\n\nclass SkillsPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      skill: [],\n      articles: []\n    }\n  }\n  // var {article} = props.location;\n\n  //var article = { id: '001', title: 'First article', detail: 'This is some detail', link: 'article' };\n\n  componentWillMount = () => {\n\n    var skill = getSkill(this.state.id);\n    var articles = getArticlesForSkill(this.state.id);\n\n    // console.log(this.state.articles);\n\n    this.setState({\n      //article:  { id: '001', title: 'First article', detail: 'This is some detail', link: 'article' }\n      skill: skill,\n      articles: articles\n    })\n\n    // console.log(this.state.articles);\n  }\n\n  render() {\n\n    return (\n      <div className=\"col-12 col-sm-12 col-lg-12\">\n\n        <div className=\"article-page\">\n\n          <h1>{this.state.skill.title} projects</h1>\n      \n          <div>\n            {this.state.articles.length > 0 ?\n              <div className=\"row\">\n                {this.state.articles.map((article, index) => {\n                  return (\n                    <ArticleCard key={index} article={article} />\n                  )\n                })}\n              </div>\n              : <div>There are not articles</div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SkillsPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport Heading from './components/Heading'\n// import AppNavbar from './components/AppNavbar'\nimport ArticlePage from './components/ArticlePage'\nimport SkillsPage from './components/SkillPage'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Heading />\n      <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n        <Switch >\n          <Route exact path='/' component={App} />\n          <Route path='/skill/:id' component={SkillsPage} />\n          <Route path='/article/:id' component={ArticlePage} />\n        </Switch>\n      </BrowserRouter>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}